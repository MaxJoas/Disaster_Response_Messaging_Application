version: 2

orbs:
  python: circleci/python@0.2.1

jobs:
  test_and_publish_model:
    docker:
      - image: circleci/python:3.7.6
    working_directory: ~/project/disaster_messaging_classification_model
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Install pip
          command: pip install --upgrade pip
      - run:
          name: Install poetry
          command: pip install poetry
      - run:
          name: Install poetry packages
          command: make poetry-install
      - run:
          name: preprocess the data
          command: make process-data
      - run:
          name: Train model
          command: make train-model
      - run:
          name: Run model test
          command: make test-model
      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = $PYPI_USERNAME" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: create and upload packages
          command: make package

  test_and_build_app:
    docker:
      - image: circleci/python:3.7.6
    working_directory: ~/project/disaster_messaging_app
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Install pip
          command: pip install --upgrade pip
      - run:
          name: Install poetry
          command: pip install poetry
      - run:
          name: Install poetry packages
          command: make poetry-install
      - run:
          name: Run API tests with Python 3.7
          command: make test-app

  differential_tests_ml_api:
    docker:
      - image: circleci/python:3.7.6
    working_directory: ~/project/disaster_messaging_app
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Install pip
          command: pip install --upgrade pip
      - run:
          name: Capturing previous model predictions
          command: |
            pip install -r diff_test_requirements.txt
            PYTHONPATH=. python3 tests/capture_model_predictions.py
      - run:
          name: Running differential tests
          command: |
            make poetry-install
            py.test -vv tests -m differential

  build_and_push_to_heroku_docker:
    docker:
      - image: circleci/python:3.7.6
    working_directory: ~/project/disaster_messaging_app
    steps:
      - checkout:
          path: ~/project
      - setup_remote_docker:
          docker_layer_caching: false
      - run: docker login --username=$HEROKU_EMAIL --password=$HEROKU_API_KEY registry.heroku.com
      - run:
          name: Setup Heroku CLI
          command: |
            wget -qO- https://cli-assets.heroku.com/install-ubuntu.sh | sh
      - run:
          name: Build and Push Image
          command: |
            make build-app-heroku push-app-heroku
      - run:
          name: Release to Heroku
          command: |
            heroku container:release web --app $HEROKU_APP_NAME

workflows:
  version: 2
  build-app-workflow:
    jobs:
      - test_and_publish_model:
          filters:
            branches:
              only:
                - master
      - test_and_build_app:
          requires:
            - test_and_publish_model
          filters:
            branches:
              only:
                - master
      # - differential_tests_ml_api:
      #     requires:
      #       - test_and_publish_model
      - build_and_push_to_heroku_docker:
          requires:
            - test_and_build_app
            # - differential_tests_ml_api
          filters:
            branches:
              only:
                - master
